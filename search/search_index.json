{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dokumentation zum Projekt \"MkDocs\"","text":"<p>In dieser MkDocs-Dokumentation sind alle Beschreibungen sowie Dokumente zu dem Projekt \"MkDocs\" zu finden.</p> <p>Zum Projektteam geh\u00f6ren: </p> <ul> <li>Tim Haake (Product Owner) </li> <li>Luca Ihrke (Scrum Master) </li> <li>Clemens Eller (Entwicklerteam) </li> <li>Jule Pfeil (Entwicklerteam) </li> <li>Heiko Arnhold (Entwicklerteam) </li> </ul>"},{"location":"Aufzaehlung%20Loesung/","title":"Aufz\u00e4hlungen L\u00f6sung","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n1.1. Kunde:  \n   1. Tillmann, Raphi  \n\n1.2. Product Owner:  \n   1. Tim Haake  \n\n1.3. Sprint Team 1:  \n   1. Falco  \n   2. Benny  \n   3. Marcel  \n   4. Florian  \n   5. Leon  \n   6. Eric  \n\n1.4. Sprint Team 2:  \n   1. Anna  \n   2. Jule  \n   3. Heiko  \n   4. Josef  \n   5. Klemens  \n   6. Timo  \n   7. Clemens  \n   8. Luca  \n\n\n## 2. Kundenanforderungen\n\n2.1. English Breakfast Bestandteile\n\n2.2. Utensilien:  \n   1. Teller  \n   2. Messer  \n   3. Gabel  \n   4. L\u00f6ffel  \n\n\n\n## 3. Sprints\n\n3.1. Budget:  \n   1. Sprint Team 1: 5 Euro  \n   2. Sprint Team 2: 15 Euro  \n\n3.2. Sprint 1 (15 Minuten)\n\n   3.2. Aufgaben Sprint Team 1:  \n      1. L\u00f6ffel holen  \n      2. Earl Grey Tea besorgen  \n      3. Milch holen  \n      4. Gabeln organisieren  \n\n3.3. Sprint 2 (30 Minuten)\n\n   3.3.1. Aufgaben Sprint Team 1:  \n      1. Tee vorbereiten  \n\n   3.3.2. Aufgaben Sprint Team 2:  \n      1. Toast mit Jam bestreichen  \n\n\n\n## 4. Ressourcen\n   1. Teller  \n   2. Messer  \n   3. Kekse  \n   4. 20 Euro  \n   5. Tassen  \n   6. Wasserkocher  \n</code></pre>"},{"location":"Automatisch%20nummerierte%20L%C3%B6sung/","title":"automatisch nummerierte Abbildung L\u00f6sung","text":"<pre><code>![English Breakfast](./images/english_breakfast.jpg){#fig:1}\n\nAbbildung 1 zeigt ein klassisches English Breakfast.\n\nWie in [Abbildung 1](#fig:1) gezeigt,...\n</code></pre>"},{"location":"Flussgraphen%20Loesung/","title":"Flussgraphen L\u00f6sung","text":"<pre><code>mermaid\ngraph TD;\n    A[Sprint 1] --&gt; B[Sp 1: L\u00f6ffel holen, earl gray, milk, Gabeln];\n    A --&gt; C[Sp 2: Baked beans, Sausages, bacon, toast, butter, jam];\n    D[Sprint 2] --&gt; E[Sp 1: Tee vorbereitet];\n    D --&gt; F[Sp 2: Toast geschmiert mit jam];\n</code></pre>"},{"location":"Fu%C3%9Fnoten%20loesung/","title":"Fu\u00dfnoten L\u00f6sung","text":"<pre><code>Der Kunde w\u00fcnscht ein traditionelles englisches Fr\u00fchst\u00fcck[^1].\n\n[^1]: Ein klassisches englisches Fr\u00fchst\u00fcck besteht typischerweise aus Baked Beans, Sausages, Bacon und Toast.\n\nMehr Informationen zu [English Breakfast](https://de.wikipedia.org/wiki/English_Breakfast).\n</code></pre>"},{"location":"Githubanmeldung/","title":"Was ist Git?","text":"<p>Git ist ein verteiltes Versionskontrollsystem f\u00fcr Dateien. Es dient der Projektentwicklung auf Plattformen wie GitHub oder GitLab. Git eignet sich hervorragend f\u00fcr die Versionsverwaltung von Quellcode sowie f\u00fcr das Speichern flach strukturierter Datens\u00e4tze.</p>"},{"location":"Githubanmeldung/#erstellung-eines-kontos","title":"Erstellung eines Kontos","text":"<ol> <li> <p>Aufruf der offiziellen GitHub-Website: Besuche die GitHub-Website.</p> </li> <li> <p>Konto erstellen \u00fcber den Button \"Sign up\"</p> </li> </ol> <p></p> <ol> <li>E-Mail-Adresse, Passwort und Benutzernamen festlegen</li> </ol> <p></p> <ol> <li>Den erstellten Account per E-Mail verifizieren</li> </ol> <p></p>"},{"location":"Githubanmeldung/#erstellung-eines-repositories","title":"Erstellung eines Repositories","text":"<ol> <li> <p>\u00dcber das Hauptmen\u00fc zum eigenen Profil navigieren und \"Your Repositories\" ausw\u00e4hlen</p> </li> <li> <p>\"New\" ausw\u00e4hlen</p> </li> <li> <p>Name des Verzeichnisses und ggf. Beschreibung hinterlegen</p> </li> <li> <p>Je nach Nutzung festlegen, ob das Repository \u00f6ffentlich oder privat sein soll</p> </li> <li> <p>Erstellen des Repositories</p> </li> </ol> <p></p>"},{"location":"Gitrepositorys/","title":"1. Eine MkDocs-Dokumentation mit Hilfe von Git aus einem Repository laden","text":"<p>Um eine MkDocs-Dokumentation aus einem Git-Repository zu laden, ben\u00f6tigst du zuerst Git auf deinem System. Wenn du Git noch nicht installiert hast, kannst du es von git-scm.com herunterladen. Sobald Git installiert ist, \u00f6ffne das Terminal oder die Eingabeaufforderung. Verwende den Befehl <code>git clone &lt;URL-zum-Repository&gt;</code>, um das Repository zu klonen, wobei du <code>&lt;URL-zum-Repository&gt;</code> durch die tats\u00e4chliche URL des MkDocs-Repositorys ersetzt. Nachdem der Klonvorgang abgeschlossen ist, wechsle in das neu erstellte Verzeichnis mit <code>cd &lt;Name-des-Repositorys&gt;</code>.</p> <p>Falls du MkDocs noch nicht installiert hast, kannst du dies mit <code>pip install mkdocs</code> nachholen. Um die Dokumentation lokal anzuzeigen, starte den lokalen Server mit dem Befehl <code>mkdocs serve</code>. Du kannst die Dokumentation dann im Webbrowser unter <code>http://127.0.0.1:8000</code> aufrufen. Mit diesen Schritten kannst du die MkDocs-Dokumentation erfolgreich aus einem Git-Repository laden und lokal anzeigen.</p>"},{"location":"Gitrepositorys/#2-eine-mkdocs-dokumentation-mit-hilfe-von-git-in-ein-repository-hochladen","title":"2. Eine MkDocs-Dokumentation mit Hilfe von Git in ein Repository hochladen","text":"<p>Um eine MkDocs-Dokumentation in ein Git-Repository hochzuladen, musst du sicherstellen, dass alle \u00c4nderungen, die du an der Dokumentation vorgenommen hast, lokal gespeichert sind. Beginne damit, das Terminal oder die Eingabeaufforderung zu \u00f6ffnen und in das Verzeichnis deiner MkDocs-Dokumentation zu navigieren. Um die \u00c4nderungen f\u00fcr das Commit vorzubereiten, f\u00fchre den Befehl <code>git add .</code> aus, um alle Dateien hinzuzuf\u00fcgen. Anschlie\u00dfend kannst du mit <code>git commit -m \"Meine \u00c4nderungen\"</code> einen Commit erstellen und eine kurze Beschreibung der \u00c4nderungen hinzuf\u00fcgen.</p> <p>Um die \u00c4nderungen nun in das Remote-Repository hochzuladen, verwende den Befehl <code>git push origin main</code>. Ersetze <code>main</code> durch den Namen des Branches, in den du die \u00c4nderungen hochladen m\u00f6chtest, falls du einen anderen Branch verwendest. Nach dem Ausf\u00fchren dieser Befehle wird deine MkDocs-Dokumentation erfolgreich in das Git-Repository hochgeladen und ist dort verf\u00fcgbar.</p>"},{"location":"Gitrepositorys/#3-eine-mkdocs-dokumentation-mit-hilfe-von-git-in-ein-repository-hochladen-und-automatisch-als-webseite-uber-dienstanbieter-veroffentlichen","title":"3. Eine MkDocs-Dokumentation mit Hilfe von Git in ein Repository hochladen und automatisch als Webseite \u00fcber Dienstanbieter ver\u00f6ffentlichen","text":"<p>Um eine MkDocs-Dokumentation zu erstellen und sie automatisch als Webseite zu ver\u00f6ffentlichen, kannst du GitHub Pages nutzen. Zuerst musst du ein neues Repository auf GitHub erstellen. Nachdem du dein Repository eingerichtet hast, generiere die Dokumentation mit dem Befehl <code>mkdocs build</code>. Dieser Befehl erstellt die statischen Dateien, die f\u00fcr die Ver\u00f6ffentlichung ben\u00f6tigt werden.</p> <p>Wechsle danach in den <code>gh-pages</code>-Branch, indem du den Befehl <code>git checkout --orphan gh-pages</code> verwendest. F\u00fcge nun die generierten Dateien aus dem <code>site</code>-Verzeichnis hinzu, indem du <code>git --work-tree=site add --all</code> ausf\u00fchrst. Committe die \u00c4nderungen mit dem Befehl <code>git --work-tree=site commit -m \"Ver\u00f6ffentlichung der MkDocs-Dokumentation\"</code>. Um die \u00c4nderungen in den <code>gh-pages</code>-Branch zu pushen, verwende <code>git push origin gh-pages --force</code>.</p> <p>Vergiss nicht, in den Einstellungen deines GitHub-Repositorys GitHub Pages zu aktivieren und den <code>gh-pages</code>-Branch als Quelle auszuw\u00e4hlen. Mit diesen Schritten wird deine MkDocs-Dokumentation automatisch als Webseite ver\u00f6ffentlicht, die \u00fcber GitHub Pages zug\u00e4nglich ist.</p>"},{"location":"Gitrepositorys/#4-den-git-zugriff-in-den-editor-als-schnellzugriff-einbinden","title":"4. Den Git-Zugriff in den Editor als Schnellzugriff einbinden","text":"<p>Um den Git-Zugriff in einem Code-Editor wie Visual Studio Code als Schnellzugriff einzubinden, musst du sicherstellen, dass Git auf deinem Computer installiert ist. \u00d6ffne dann deinen Code-Editor und nutze das integrierte Terminal, um Git-Befehle direkt auszuf\u00fchren. In Visual Studio Code kannst du das Terminal \u00f6ffnen, indem du `Strg + `` (Grave Accent) dr\u00fcckst oder \u00fcber das Men\u00fc \"Terminal\" ein neues Terminal \u00f6ffnest.</p> <p>Du kannst nun Befehle wie <code>git clone</code>, <code>git add</code>, <code>git commit</code> und <code>git push</code> direkt im Terminal eingeben, um mit deinem Git-Repository zu arbeiten. Dar\u00fcber hinaus gibt es viele Git-Erweiterungen f\u00fcr Editoren, die eine grafische Benutzeroberfl\u00e4che f\u00fcr Git-Befehle bieten. Suche im Erweiterungsmarkt deines Editors nach \"Git\" und installiere eine passende Erweiterung. Mit diesen M\u00f6glichkeiten kannst du den Git-Zugriff bequem in deinem Editor nutzen und deine Workflow-Effizienz steigern.</p>"},{"location":"Gitrepositorys/#weitere-informationen","title":"Weitere Informationen:","text":"<p>Kommandozeile \u00f6ffnen und git config ausf\u00fchren. Daf\u00fcr folgenden Befehl benutzen: <code>git config --global http.proxy http://kjs-04.lan.dd-schulen.de:3128</code></p> <p>Um die Datei nun zu klonen, folgenden Befehl benutzen: <code>git clone https://github.com/ACCOUNTNAME_EINTRAGEN/NAME_DES_REPOSITORYS_EINTRAGEN.git</code></p> <p>Um die lokale Datei nun wieder zur\u00fcck zu pushen, folgenden Befehl benutzen: <code>cd NAME_DES_REPOSITORYS</code> <code>git add NAME_DER_DATEI.py</code> <code>git commit -m \"Initial commit\" NAME_DER_DATEI.py</code> <code>git push</code></p> <p>Nun ist die bearbeitete Datei wieder im Repository.</p>"},{"location":"Gliederung%20loesung/","title":"Gliederung L\u00f6sung","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n### 1.1. Kunde\n- Tillmann, Raphi  \n\n### 1.2. Product Owner\n- Tim Haake  \n\n### 1.3. Sprint Team 1\n- Falco  \n- Benny  \n- Marcel  \n- Florian  \n- Leon  \n- Eric  \n\n### 1.4. Sprint Team 2\n- Anna  \n- Jule  \n- Heiko  \n- Josef  \n- Klemens  \n- Timo  \n- Clemens  \n- Luca  \n\n\n## 2. Kundenanforderungen\n\n### 2.1. English Breakfast Bestandteile\n\n### 2.2. Utensilien\n- Teller  \n- Messer  \n- Gabel  \n- L\u00f6ffel  \n\n### 2.3. Essen\n- Baked Beans (Heinz)  \n- Sausages  \n- Bacon  \n- Toast + Butter  \n- Jam  \n\n### 2.4. Getr\u00e4nke\n- Earl Grey Tea  \n- Milch  \n- Zucker  \n\n## 3. Sprints\n\n### 3.1. Budget\n- Sprint Team 1: 5 Euro  \n- Sprint Team 2: 15 Euro  \n\n### 3.2. Sprint 1 (15 Minuten)\n\n#### Aufgaben Sprint Team 1\n- L\u00f6ffel holen  \n- Earl Grey Tea besorgen  \n- Milch holen  \n- Gabeln organisieren  \n\n#### Aufgaben Sprint Team 2\n- Baked Beans vorbereiten  \n- Sausages braten  \n- Bacon braten  \n- Toast vorbereiten  \n- Butter und Jam bereitstellen  \n\n### 3.3. Sprint 2 (30 Minuten)\n\n#### Aufgaben Sprint Team 1\n- Tee vorbereiten  \n\n#### Aufgaben Sprint Team 2\n- Toast mit Jam bestreichen  \n\n## 4. Ressourcen\n- Teller  \n- Messer  \n- Kekse  \n- 20 Euro  \n- Tassen  \n- Wasserkocher  \n</code></pre>"},{"location":"Hinweisboxen%20Loesung/","title":"Hinweisboxen L\u00f6sung","text":"<pre><code># Hinweisboxen\n\nHinweise werden wie folgt geschrieben:  &gt; **Hinweis:** \n\n## 1. Kunden und Teamaufstellung\n\n&gt; **Hinweis:** Die Kunden und das Team sind wie folgt aufgeteilt:\n\n\n## 2. Kundenanforderungen\n\n&gt; **Hinweis:** Diese Anforderungen wurden vom Kunden spezifiziert und m\u00fcssen erf\u00fcllt werden.\n\n\n## 3. Sprints\n\n&gt; **Hinweis:** Es gibt zwei Sprints, die in verschiedenen Teams mit unterschiedlichen Aufgaben aufgeteilt sind.\n\n\n## 4. Ressourcen\n\n&gt; **Hinweis:** Diese Ressourcen stehen den Teams zur Verf\u00fcgung.\n</code></pre>"},{"location":"Impressum%20Loesung/","title":"Impressum L\u00f6sung","text":"<pre><code># Impressum\n\nVerantwortlich f\u00fcr den Inhalt:\n\n**Firma:**  \nFr\u00fchst\u00fccks AG  \n**Adresse:**  \nFr\u00fchst\u00fccksstra\u00dfe 1, 12345 Fr\u00fchst\u00fcckshausen  \n**Kontakt:**  \nE-Mail: info@fruehstuecksag.de  \nTelefon: +49 123 456789\n</code></pre>"},{"location":"Latex%20loesung/","title":"LaTeX L\u00f6sung","text":"<pre><code>Die ben\u00f6tigte Anzahl an Utensilien pro Person f\u00fcr das English Breakfast kann berechnet werden als:\n\n$$\n\nU = G + T + L\n\n$$\n\nwobei:\n\n- \\( U \\) = Gesamtanzahl der Utensilien pro Person\n- \\( G \\) = Anzahl der Gabeln pro Person (1)\n- \\( T \\) = Anzahl der Teller pro Person (1)\n- \\( L \\) = Anzahl der L\u00f6ffel pro Person (1)\n</code></pre>"},{"location":"MkDocs-Server/","title":"MkDocs-Server Installationsanleitung","text":"<p>Diese Anleitung beschreibt die Schritte zur Installation und Konfiguration eines MkDocs-Servers.</p>"},{"location":"MkDocs-Server/#installationsschritte","title":"Installationsschritte","text":"<ol> <li>\u00d6ffnen Sie den Explorer und navigieren Sie zum Laufwerk D: (Programme)</li> </ol> <ol> <li>Starten Sie die Datei <code>Start.exe</code></li> </ol> <ol> <li>W\u00e4hlen Sie \"MkDocs Schule\" aus und warten Sie, bis der Vorgang abgeschlossen ist</li> </ol> <ol> <li> <p>F\u00fchren Sie \"Start MkDocs Schule\" aus und warten Sie, bis dieser Vorgang beendet ist</p> </li> <li> <p>Der MkDocs-Server ist nun aufgesetzt und kann erreicht werden</p> </li> <li> <p>Die Installation ist abgeschlossen</p> </li> </ol>"},{"location":"MkDocs-Server/#hinweise","title":"Hinweise","text":"<ul> <li>Stellen Sie sicher, dass Sie \u00fcber die notwendigen Berechtigungen verf\u00fcgen, um Programme auf Laufwerk D: zu installieren und auszuf\u00fchren.</li> <li>Falls Probleme auftreten, \u00fcberpr\u00fcfen Sie, ob alle erforderlichen Abh\u00e4ngigkeiten installiert sind.</li> <li>F\u00fcr weitere Informationen zur Nutzung von MkDocs, konsultieren Sie bitte die offizielle MkDocs-Dokumentation.</li> </ul>"},{"location":"MkDocsErklaerung/","title":"MkDocs: Effizienter Statischer Site-Generator f\u00fcr Projektdokumentationen","text":"<p>MkDocs ist ein statischer Site-Generator, der speziell f\u00fcr die Erstellung von Projektdokumentationen entwickelt wurde. Er zeichnet sich durch seine Benutzerfreundlichkeit und Effizienz aus. Mit Markdown als Hauptsprache und einer einfachen Konfigurationsstruktur erm\u00f6glicht MkDocs eine schnelle und unkomplizierte Erstellung von ansprechenden Dokumentationen.</p>"},{"location":"MkDocsErklaerung/#hauptmerkmale","title":"Hauptmerkmale","text":"<ul> <li>Schneller, einfacher und ansprechender statischer Site-Generator f\u00fcr Projektdokumentationen</li> <li>Markdown-basiert: Nutzt Markdown als Auszeichnungssprache, wodurch die Erstellung von Dokumentationen intuitiv wird \u2013 ohne umfassende HTML-Kenntnisse</li> <li>Einfache Konfiguration: Steuerung der gesamten Dokumentation \u00fcber eine einzige YAML-Konfigurationsdatei</li> <li>Konvertierung von Markdown in HTML: Wandelt Markdown-Dateien in statische HTML-Seiten um, die auf jedem Webserver gehostet werden k\u00f6nnen</li> <li>In Python geschrieben: Leicht in Python-Projekten integrierbar oder anpassbar</li> <li>Open Source: Kostenlos nutzbar und anpassbar</li> </ul>"},{"location":"MkDocsErklaerung/#zusatzliche-funktionen","title":"Zus\u00e4tzliche Funktionen","text":"<ul> <li>Hohe Anpassbarkeit: Erweiterbar durch Plugins und individuelle Themes</li> <li>Erweiterte Markdown-Funktionalit\u00e4t: Unterst\u00fctzt Markdown-Erweiterungen f\u00fcr zus\u00e4tzliche Formatierungsoptionen</li> <li>Flexible Hosting-M\u00f6glichkeiten: Generierte statische HTML-Seiten k\u00f6nnen auf verschiedenen Plattformen gehostet werden (z.B. GitHub Pages, Amazon S3)</li> </ul>"},{"location":"MkDocsErklaerung/#komponenten","title":"Komponenten","text":""},{"location":"MkDocsErklaerung/#markdown","title":"Markdown","text":"<ul> <li>Dateiendung: Typischerweise <code>.md</code> oder <code>.markdown</code></li> <li>Inhalt: Einfache Syntax f\u00fcr strukturelle Elemente wie \u00dcberschriften, Listen und Links</li> <li>Dokumentationsinhalt: Enth\u00e4lt den gesamten Inhalt der Dokumentation</li> </ul>"},{"location":"MkDocsErklaerung/#yaml","title":"YAML","text":"<ul> <li>Konfigurationsdateien: Steuert das Verhalten und die Struktur des Projekts</li> <li>Dateiendung: \u00dcblicherweise <code>.yml</code> oder <code>.yaml</code></li> <li>Flexibilit\u00e4t: Superset von JSON</li> <li>Steuerung der Projektstruktur: Definiert Projektstruktur, Theme und aktivierte Plugins</li> </ul>"},{"location":"MkDocsErklaerung/#themes","title":"Themes","text":"<ul> <li>Aussehen der Website: Bestimmen das visuelle Erscheinungsbild der generierten Website</li> <li>Anpassbar: Standard-Themes k\u00f6nnen angepasst oder selbst erstellt werden</li> </ul>"},{"location":"MkDocsErklaerung/#plugins","title":"Plugins","text":"<ul> <li>Erweiterte Funktionalit\u00e4t: Bieten zus\u00e4tzliche Features wie Suche oder Diagramme</li> <li>Leichte Integration: Einfach in der YAML-Konfigurationsdatei definierbar und einbindbar</li> </ul> <p>MkDocs ist somit eine hervorragende Wahl f\u00fcr Projekte, die eine einfache, aber leistungsstarke L\u00f6sung f\u00fcr die Dokumentation ben\u00f6tigen. Dank der flexiblen Anpassungsoptionen, der Markdown-Basis und der einfachen Konfiguration bietet MkDocs ein optimales Werkzeug f\u00fcr die Erstellung von Projektdokumentationen.</p>"},{"location":"Mkdocsprinzip/","title":"Erkl\u00e4rung des MkDocs-Server-Prinzips","text":""},{"location":"Mkdocsprinzip/#uberblick","title":"\u00dcberblick","text":"<p>Das Bild zeigt das Prinzip des MkDocs-Servers, der f\u00fcr das Hosting und die Anzeige von Dokumentationsprojekten in einer webbasierten Umgebung genutzt wird. Nachfolgend wird der Prozess und die Interaktion der verschiedenen Komponenten erl\u00e4utert.</p> <p></p>"},{"location":"Mkdocsprinzip/#komponenten","title":"Komponenten","text":""},{"location":"Mkdocsprinzip/#1-mkdocs-client","title":"1. MkDocs-Client","text":"<ul> <li>Browser (z.B. Firefox): </li> <li>Der Benutzer startet den Browser im Localhost-Modus (127.0.0.1), um die Dokumentation zu betrachten.</li> <li>Der Browser sendet HTTP-Requests (Anfragen) an den MkDocs-Server und empf\u00e4ngt HTTP-Responses (Antworten), um die Dokumentation anzuzeigen.</li> <li>Localhost bedeutet, dass der Browser auf einen Webserver zugreift, der lokal auf dem Rechner l\u00e4uft.</li> </ul>"},{"location":"Mkdocsprinzip/#2-mkdocs-server","title":"2. MkDocs-Server","text":"<ul> <li>Der MkDocs-Server wird lokal auf dem Rechner installiert, typischerweise im Pfad Python\\Scripts\\mkdocs.exe.</li> <li>Der Server wird gestartet, wodurch eine MkDocs-Serverinstanz l\u00e4uft. Diese Instanz nimmt HTTP-Anfragen vom Browser entgegen und liefert die entsprechende Dokumentation als Antwort zur\u00fcck.</li> <li>MkDocs nutzt das HTTP-Protokoll (insbesondere GET-Requests), um die Dokumentation dynamisch an den Browser auszuliefern.</li> </ul>"},{"location":"Mkdocsprinzip/#3-mkdocs-projektordner","title":"3. MkDocs-Projektordner","text":"<ul> <li>Der Projektordner enth\u00e4lt die Dokumentationsdateien sowie die Konfigurationsdatei:</li> <li>docs-Ordner: Dieser Ordner enth\u00e4lt die Markdown-Dateien, die die eigentliche Dokumentation bilden.</li> <li>mkdocs.yml: Eine Konfigurationsdatei, die das Layout, das Thema und andere Einstellungen f\u00fcr die Dokumentation definiert.</li> <li>Zum Bearbeiten dieser Dateien wird \u00fcblicherweise ein Code-Editor wie Visual Studio Code verwendet.</li> </ul>"},{"location":"Mkdocsprinzip/#workflow","title":"Workflow","text":"<ol> <li>Der Benutzer bearbeitet die Dokumentationsdateien und die Konfigurationsdatei (mkdocs.yml) in Visual Studio Code.</li> <li>Die \u00c4nderungen k\u00f6nnen lokal \u00fcber den MkDocs-Server betrachtet werden.</li> <li>Der Benutzer \u00f6ffnet den Browser und verbindet sich \u00fcber localhost (127.0.0.1) mit dem MkDocs-Server.</li> <li>Der Browser sendet eine HTTP-Anfrage an den Server, und dieser liefert die aktualisierte Dokumentation als HTTP-Antwort zur\u00fcck.</li> <li>Die Dokumentation wird dynamisch im Browser angezeigt.</li> </ol>"},{"location":"Mkdocsprinzip/#zusammenfassung","title":"Zusammenfassung","text":"<p>Der MkDocs-Client (Browser) sendet HTTP-Anfragen an den MkDocs-Server, welcher die Inhalte aus dem MkDocs-Projektordner bereitstellt. Der Benutzer kann die Dokumentation durch Bearbeitung der Markdown-Dateien und der mkdocs.yml-Konfigurationsdatei in Visual Studio Code anpassen, w\u00e4hrend der Server diese \u00c4nderungen im Browser anzeigt.</p>"},{"location":"Relflexion/","title":"Feedback zum MKDocs Workshop","text":""},{"location":"Relflexion/#positive-aspekte","title":"Positive Aspekte","text":"<ul> <li>Die SI-Sch\u00fcler haben sich gut an das Tempo der AEs angepasst.</li> <li>W\u00e4hrend des Workshops sind die Sch\u00fcler herumgelaufen und haben individuelle Fragen und Probleme angegangen, was sehr hilfsbereit war.</li> <li>Alle Informationen wurden verst\u00e4ndlich formuliert.</li> </ul>"},{"location":"Relflexion/#verbesserungsbereiche","title":"Verbesserungsbereiche","text":"<ul> <li>Unzureichende Zeitplanung.</li> <li>Die Rechner in der Schule waren zu langsam, was zu Verz\u00f6gerungen im Prozess f\u00fchrte.</li> </ul>"},{"location":"Relflexion/#verbesserungsvorschlage","title":"Verbesserungsvorschl\u00e4ge","text":"<ul> <li>Mehr Zeit einplanen.</li> </ul>"},{"location":"Relflexion/#zielerreichung-und-reflexion","title":"Zielerreichung und Reflexion","text":"<p>Die Ziele der Aufgaben wurden erl\u00e4utert und mit den Teilnehmern reflektiert. Die Teilnehmer f\u00fchlen sich nun in der Lage, MKDocs zu nutzen und ihre eigene Dokumentation zu erstellen.</p>"},{"location":"Tabellen%20Loesung/","title":"Tabellen L\u00f6sung","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n\n| Kunde           | Product Owner  |\n|-----------------|----------------|\n| Tillmann, Raphi | Tim Haake       |\n\n| Sprint Team 1   | Sprint Team 2   |\n|----------------|-----------------|\n| Falco           | Anna            |\n| Benny           | Jule            |\n| Marcel          | Heiko           |\n| Florian         | Josef           |\n| Leon            | Klemens         |\n| Eric            | Timo            |\n|                 | Clemens         |\n|                 | Luca            |\n\n\n\n## 2. Kundenanforderungen\n\n### 2.1. English Breakfast Bestandteile\n\n| Kategorie  | Items                                  |\n|------------|----------------------------------------|\n| Utensilien | Teller, Messer, Gabel, L\u00f6ffel          |\n| Essen      | Baked Beans (Heinz), Sausages, Bacon, Toast + Butter, Jam |\n| Getr\u00e4nke   | Earl Grey Tea, Milch, Zucker           |\n\n\n## 3. Sprints\n\n### 3.1. Budget\n\n| Sprint Team 1 | Sprint Team 2 |\n|---------------|---------------|\n| 5 Euro        | 15 Euro       |\n\n### 3.2. Sprint 1 (15 Minuten)\n\n| Team          | Aufgaben                                               |\n|---------------|--------------------------------------------------------|\n| Sprint Team 1 | L\u00f6ffel holen, Earl Grey Tea besorgen, Milch holen, Gabeln organisieren |\n| Sprint Team 2 | Baked Beans vorbereiten, Sausages braten, Bacon braten, Toast vorbereiten, Butter und Jam bereitstellen |\n\n### 3.3. Sprint 2 (30 Minuten)\n\n| Team          | Aufgaben                            |\n|---------------|-------------------------------------|\n| Sprint Team 1 | Tee vorbereiten                     |\n| Sprint Team 2 | Toast mit Jam bestreichen           |\n\n\n\n## 4. Ressourcen\n\n| Ressourcen    | Verf\u00fcgbar              |\n|---------------|------------------------|\n| Teller        | Ja                     |\n| Messer        | Ja                     |\n| Kekse         | Ja                     |\n| Budget        | 20 Euro                |\n| Tassen        | Ja                     |\n| Wasserkocher  | Ja                     |\n</code></pre>"},{"location":"Unterseiten%20Loesung/","title":"Unterseiten L\u00f6sung","text":"<pre><code># Startseite - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n   - [1.1. Kunde und Product Owner](kunden-und-product-owner.md)\n   - [1.2. Sprint Team 1](sprint-team-1.md)\n   - [1.3. Sprint Team 2](sprint-team-2.md)\n</code></pre>"},{"location":"Verzeichnisse%20Loesung/","title":"Verzeichnisse L\u00f6sung","text":"<pre><code># Inhaltsverzeichnis\n1. [Beteiligte](#beteiligte)\n2. [Kundenanforderungen](#kundenanforderungen)\n    - [Utensilien](#utensilien)\n3. [Sprint Planung](#sprint-planung)\n    - [Sprint 1](#sprint-1)\n    - [Sprint 2](#sprint-2)\n4. [Verf\u00fcgbare Ressourcen](#verf\u00fcgbare-ressourcen)\n</code></pre>"},{"location":"aufgaben/","title":"Aufgaben:","text":"<p>! Erstelle selbstst\u00e4ndig neue Seiten zu den Aufgaben im Markdown (.md) Format!</p> <ol> <li> <p>Erstelle ein Deckblatt im Markdown-Format. \"English Breakfast Project\" soll die Haupt\u00fcberschrift sein.    Es sollen alle Autoren aufgelistet werden, die am Projekt mitgewirkt haben.    Die Kundenanforderungen sollen auch auf dem Deckblatt zu sehen sein. Kundenanforderungen</p> </li> <li> <p>Erstelle eine strukturierte Gliederung f\u00fcr ein English Breakfast Projekt. Du bist Teil eines Schulprojekts, bei dem zwei Teams ein traditionelles englisches Fr\u00fchst\u00fcck zubereiten sollen. Erstelle eine detaillierte Gliederung f\u00fcr dieses Projekt, die folgende Aspekte ber\u00fccksichtigt:</p> <ul> <li>Die Beteiligten (Kunde, Product Owner und zwei Sprint-Teams)</li> <li>Die Kundenanforderungen (ben\u00f6tigte Utensilien, Speisen und Getr\u00e4nke)</li> <li>Die Aufgabenverteilung f\u00fcr zwei Sprints, einschlie\u00dflich des Budgets f\u00fcr jedes Team</li> <li>Eine Liste der verf\u00fcgbaren Ressourcen</li> </ul> </li> <li> <p>Verlinke die Seiten zu den Sprint-Teams und dem Kunden sowie Product Owner.</p> </li> <li> <p>Verwende f\u00fcr die Ergebnisse aus Aufgabe 2 eine klare Struktur mit Hauptpunkten, Unterpunkten und gegebenenfalls weiteren Untergliederungen. Nutze Markdown-Formatierung, um die Hierarchie deiner Gliederung deutlich zu machen.</p> </li> <li> <p>Erstelle Hinweisboxen im Markdown-Format.</p> </li> <li> <p>Erstelle zu den verschiedenen Kategorien aus Aufgabe 2 eine Tabelle.</p> </li> <li> <p>Erstelle Verzeichnisse mit den Beispieldaten.</p> </li> <li> <p>F\u00fcge ein Bild hinzu und skaliere dieses automatisch.</p> </li> <li> <p>Erstelle einen Flussgraphen mithilfe von \"mermaid\".</p> </li> <li> <p>Erstelle ein Impressum.</p> </li> <li> <p>Verwende eine LaTeX-Formel in MKDocs. Versuche eine Formel aufzustellen f\u00fcr ben\u00f6tigte Utensilien.</p> </li> <li> <p>Erstelle Fu\u00dfnoten und Verweise. Verweise bitte auf die Wikipedia-Seite: \"https://de.wikipedia.org/wiki/Englisches_Fr%C3%BChst%C3%BCck\".</p> </li> <li> <p>\u00c4ndere das Farblayout der Seite.</p> </li> <li> <p>\u00c4ndere das Logo der Seite.</p> </li> <li> <p>F\u00fcge eine automatische Nummerierung der Abbildungsnummern hinzu.</p> </li> </ol>"},{"location":"bilder%20Loesung/","title":"Bilder L\u00f6sung","text":"<pre><code>![English Breakfast](./images/english_breakfast.jpg){ width=50% } gterjz\n</code></pre>"},{"location":"kundenanforderungen/","title":"English Breakfast - Projektaufteilung","text":""},{"location":"kundenanforderungen/#beteiligte","title":"Beteiligte","text":"<ul> <li>Kunde: Tillmann, Raphi</li> <li>Product Owner: Tim Haake</li> </ul>"},{"location":"kundenanforderungen/#sprint-teams","title":"Sprint Teams","text":"<ul> <li>Sprint Team 1: Falco, Benny, Marcel, Florian, Leon, Eric</li> <li>Sprint Team 2: Anna, Jule, Heiko, Josef, Klemens, Timo, Clemens, Luca</li> </ul>"},{"location":"kundenanforderungen/#kundenanforderungen","title":"Kundenanforderungen","text":"<ul> <li>Fr\u00fchst\u00fccksthema: English Breakfast</li> </ul>"},{"location":"kundenanforderungen/#utensilien","title":"Utensilien","text":"<ul> <li>Besteck: Teller, Messer, Gabel, L\u00f6ffel</li> <li>Essen: Baked beans (Heinz), Sausages, Bacon, Toast + Butter, Jam</li> <li>Getr\u00e4nke: Earl Grey Tee, Milch, Zucker</li> </ul>"},{"location":"kundenanforderungen/#sprint-planung","title":"Sprint Planung","text":""},{"location":"kundenanforderungen/#sprint-1","title":"Sprint 1","text":"<ul> <li>Zeit: 15 Minuten</li> <li>Budget: 5 Euro (Sprint Team 1)</li> </ul>"},{"location":"kundenanforderungen/#aufgaben","title":"Aufgaben","text":"<ul> <li>Sprint Team 1</li> <li>SP 1: L\u00f6ffel, Earl Grey Tee, Milch, Gabeln besorgen</li> <li>Sprint Team 2</li> <li>SP 2: Baked beans, Sausages, Bacon, Toast, Butter, Jam besorgen</li> </ul>"},{"location":"kundenanforderungen/#sprint-2","title":"Sprint 2","text":"<ul> <li>Zeit: 30 Minuten</li> <li>Budget: 15 Euro (Sprint Team 2)</li> </ul>"},{"location":"kundenanforderungen/#aufgaben_1","title":"Aufgaben","text":"<ul> <li>Sprint Team 1</li> <li>SP 1: Tee vorbereiten</li> <li>Sprint Team 2</li> <li>SP 2: Toast schmieren mit Jam</li> </ul>"},{"location":"kundenanforderungen/#verfugbare-ressourcen","title":"Verf\u00fcgbare Ressourcen","text":"<ul> <li>Teller</li> <li>Messer</li> <li>Kekse</li> <li>20 Euro Gesamtbudget</li> <li>Tassen</li> <li>Wasserkocher</li> </ul>"},{"location":"loesungen/","title":"L\u00f6sungen","text":""},{"location":"loesungen/#1-startseite-mit-titel-und-autoren","title":"1. Startseite mit Titel und Autoren","text":"<pre><code># English Breakfast Project\n\n## Autoren\n- **Kunde:** Tillmann, Raphi\n- **Product Owner:** Tim Haake\n- **Sprint Team 1:** Falco, Benny, Marcel, Florian, Leon, Eric\n- **Sprint Team 2:** Anna, Jule, Heiko, Josef, Klemens, Timo, Clemens, Luca\n\n\n## Kundenanforderungen\nDer Kunde w\u00fcnscht sich ein traditionelles **English Breakfast**, das folgende Bestandteile umfasst:\n</code></pre>"},{"location":"loesungen/#2-gliederungen","title":"2. Gliederungen","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n### 1.1. Kunde\n- Tillmann, Raphi  \n\n### 1.2. Product Owner\n- Tim Haake  \n\n### 1.3. Sprint Team 1\n- Falco  \n- Benny  \n- Marcel  \n- Florian  \n- Leon  \n- Eric  \n\n### 1.4. Sprint Team 2\n- Anna  \n- Jule  \n- Heiko  \n- Josef  \n- Klemens  \n- Timo  \n- Clemens  \n- Luca  \n\n---\n\n## 2. Kundenanforderungen\n\n### 2.1. English Breakfast Bestandteile\n\n### 2.2. Utensilien\n- Teller  \n- Messer  \n- Gabel  \n- L\u00f6ffel  \n\n### 2.3. Essen\n- Baked Beans (Heinz)  \n- Sausages  \n- Bacon  \n- Toast + Butter  \n- Jam  \n\n### 2.4. Getr\u00e4nke\n- Earl Grey Tea  \n- Milch  \n- Zucker  \n\n---\n\n## 3. Sprints\n\n### 3.1. Budget\n- Sprint Team 1: 5 Euro  \n- Sprint Team 2: 15 Euro  \n\n### 3.2. Sprint 1 (15 Minuten)\n\n#### Aufgaben Sprint Team 1\n- L\u00f6ffel holen  \n- Earl Grey Tea besorgen  \n- Milch holen  \n- Gabeln organisieren  \n\n#### Aufgaben Sprint Team 2\n- Baked Beans vorbereiten  \n- Sausages braten  \n- Bacon braten  \n- Toast vorbereiten  \n- Butter und Jam bereitstellen  \n\n### 3.3. Sprint 2 (30 Minuten)\n\n#### Aufgaben Sprint Team 1\n- Tee vorbereiten  \n\n#### Aufgaben Sprint Team 2\n- Toast mit Jam bestreichen  \n\n---\n\n## 4. Ressourcen\n- Teller  \n- Messer  \n- Kekse  \n- 20 Euro  \n- Tassen  \n- Wasserkocher  \n</code></pre>"},{"location":"loesungen/#3-unterseiten","title":"3. Unterseiten","text":"<pre><code># Startseite - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n   - [1.1. Kunde und Product Owner](kunden-und-product-owner.md)\n   - [1.2. Sprint Team 1](sprint-team-1.md)\n   - [1.3. Sprint Team 2](sprint-team-2.md)\n</code></pre>"},{"location":"loesungen/#4-aufzahlungen","title":"4. Aufz\u00e4hlungen","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n1.1. Kunde:  \n   1. Tillmann, Raphi  \n\n1.2. Product Owner:  \n   1. Tim Haake  \n\n1.3. Sprint Team 1:  \n   1. Falco  \n   2. Benny  \n   3. Marcel  \n   4. Florian  \n   5. Leon  \n   6. Eric  \n\n1.4. Sprint Team 2:  \n   1. Anna  \n   2. Jule  \n   3. Heiko  \n   4. Josef  \n   5. Klemens  \n   6. Timo  \n   7. Clemens  \n   8. Luca  \n\n---\n\n## 2. Kundenanforderungen\n\n2.1. English Breakfast Bestandteile\n\n2.2. Utensilien:  \n   1. Teller  \n   2. Messer  \n   3. Gabel  \n   4. L\u00f6ffel  \n\n---\n\n## 3. Sprints\n\n3.1. Budget:  \n   1. Sprint Team 1: 5 Euro  \n   2. Sprint Team 2: 15 Euro  \n\n3.2. Sprint 1 (15 Minuten)\n\n   3.2. Aufgaben Sprint Team 1:  \n      1. L\u00f6ffel holen  \n      2. Earl Grey Tea besorgen  \n      3. Milch holen  \n      4. Gabeln organisieren  \n\n3.3. Sprint 2 (30 Minuten)\n\n   3.3.1. Aufgaben Sprint Team 1:  \n      1. Tee vorbereiten  \n\n   3.3.2. Aufgaben Sprint Team 2:  \n      1. Toast mit Jam bestreichen  \n\n---\n\n## 4. Ressourcen\n   1. Teller  \n   2. Messer  \n   3. Kekse  \n   4. 20 Euro  \n   5. Tassen  \n   6. Wasserkocher  \n</code></pre>"},{"location":"loesungen/#5-hinweisboxen","title":"5. Hinweisboxen","text":"<pre><code># Hinweisboxen\n\nHinweise werden wie folgt geschrieben:  &gt; **Hinweis:** \n\n## 1. Kunden und Teamaufstellung\n\n&gt; **Hinweis:** Die Kunden und das Team sind wie folgt aufgeteilt:\n\n\n## 2. Kundenanforderungen\n\n&gt; **Hinweis:** Diese Anforderungen wurden vom Kunden spezifiziert und m\u00fcssen erf\u00fcllt werden.\n\n\n## 3. Sprints\n\n&gt; **Hinweis:** Es gibt zwei Sprints, die in verschiedenen Teams mit unterschiedlichen Aufgaben aufgeteilt sind.\n\n\n## 4. Ressourcen\n\n&gt; **Hinweis:** Diese Ressourcen stehen den Teams zur Verf\u00fcgung.\n</code></pre>"},{"location":"loesungen/#6-tabellen","title":"6. Tabellen","text":"<pre><code># Gliederung - English Breakfast Projekt\n\n## 1. Kunden und Teamaufstellung\n\n| Kunde           | Product Owner  |\n|-----------------|----------------|\n| Tillmann, Raphi | Tim Haake       |\n\n| Sprint Team 1   | Sprint Team 2   |\n|----------------|-----------------|\n| Falco           | Anna            |\n| Benny           | Jule            |\n| Marcel          | Heiko           |\n| Florian         | Josef           |\n| Leon            | Klemens         |\n| Eric            | Timo            |\n|                 | Clemens         |\n|                 | Luca            |\n\n---\n\n## 2. Kundenanforderungen\n\n### 2.1. English Breakfast Bestandteile\n\n| Kategorie  | Items                                  |\n|------------|----------------------------------------|\n| Utensilien | Teller, Messer, Gabel, L\u00f6ffel          |\n| Essen      | Baked Beans (Heinz), Sausages, Bacon, Toast + Butter, Jam |\n| Getr\u00e4nke   | Earl Grey Tea, Milch, Zucker           |\n\n---\n\n## 3. Sprints\n\n### 3.1. Budget\n\n| Sprint Team 1 | Sprint Team 2 |\n|---------------|---------------|\n| 5 Euro        | 15 Euro       |\n\n### 3.2. Sprint 1 (15 Minuten)\n\n| Team          | Aufgaben                                               |\n|---------------|--------------------------------------------------------|\n| Sprint Team 1 | L\u00f6ffel holen, Earl Grey Tea besorgen, Milch holen, Gabeln organisieren |\n| Sprint Team 2 | Baked Beans vorbereiten, Sausages braten, Bacon braten, Toast vorbereiten, Butter und Jam bereitstellen |\n\n### 3.3. Sprint 2 (30 Minuten)\n\n| Team          | Aufgaben                            |\n|---------------|-------------------------------------|\n| Sprint Team 1 | Tee vorbereiten                     |\n| Sprint Team 2 | Toast mit Jam bestreichen           |\n\n---\n\n## 4. Ressourcen\n\n| Ressourcen    | Verf\u00fcgbar              |\n|---------------|------------------------|\n| Teller        | Ja                     |\n| Messer        | Ja                     |\n| Kekse         | Ja                     |\n| Budget        | 20 Euro                |\n| Tassen        | Ja                     |\n| Wasserkocher  | Ja                     |\n</code></pre>"},{"location":"loesungen/#7-verzeichnisse","title":"7. Verzeichnisse","text":"<pre><code># Inhaltsverzeichnis\n1. [Beteiligte](#beteiligte)\n2. [Kundenanforderungen](#kundenanforderungen)\n    - [Utensilien](#utensilien)\n3. [Sprint Planung](#sprint-planung)\n    - [Sprint 1](#sprint-1)\n    - [Sprint 2](#sprint-2)\n4. [Verf\u00fcgbare Ressourcen](#verf\u00fcgbare-ressourcen)\n\n---\n\n# English Breakfast - Projektaufteilung\n\n## Beteiligte\n...\n\n## Kundenanforderungen\n...\n\n## Sprint Planung\n...\n\n## Verf\u00fcgbare Ressourcen\n...\n</code></pre>"},{"location":"loesungen/#8-bilder","title":"8. Bilder","text":"<p>Ein Bild l\u00e4sst sich wie folgt in ein Markdown Dokument einf\u00fcgen: <code>![English Breakfast](./images/english_breakfast.jpg){ width=50% }</code></p>"},{"location":"loesungen/#9-flussgraphen","title":"9. Flussgraphen","text":"<p>Ein Flussgraph hat die Bedingung, dass mermaid vorhanden ist. Ist es vorhanden kann ein Flussgraph so aussehen:  <pre><code>```mermaid\ngraph TD;\n    A[Sprint 1] --&gt; B[Sp 1: L\u00f6ffel holen, earl gray, milk, Gabeln];\n    A --&gt; C[Sp 2: Baked beans, Sausages, bacon, toast, butter, jam];\n    D[Sprint 2] --&gt; E[Sp 1: Tee vorbereitet];\n    D --&gt; F[Sp 2: Toast geschmiert mit jam]; ````\n</code></pre></p>"},{"location":"loesungen/#10-ein-impressum-in-der-mkdocs-dokumentation-erstellen","title":"10. ein Impressum in der Mkdocs-Dokumentation erstellen","text":"<p>ein Impressum kann in einer extra angelegten markdown Datei wie folgt aussehen: <pre><code># Impressum\n\nVerantwortlich f\u00fcr den Inhalt:\n\n**Firma:**  \nFr\u00fchst\u00fccks AG  \n**Adresse:**  \nFr\u00fchst\u00fccksstra\u00dfe 1, 12345 Fr\u00fchst\u00fcckshausen  \n**Kontakt:**  \nE-Mail: info@fruehstuecksag.de  \nTelefon: +49 123 456789\n</code></pre></p>"},{"location":"loesungen/#11-latex-formeln","title":"11. LaTeX Formeln","text":"<p>Die ben\u00f6tigte LaTeX Formel sieht so aus: </p> <pre><code>Die ben\u00f6tigte Anzahl an Utensilien pro Person f\u00fcr das English Breakfast kann berechnet werden als:\n\n$$\n\nU = G + T + L\n\n$$\n\nwobei:\n\n- \\( U \\) = Gesamtanzahl der Utensilien pro Person\n\n- \\( G \\) = Anzahl der Gabeln pro Person (1)\n\n- \\( T \\) = Anzahl der Teller pro Person (1)\n\n- \\( L \\) = Anzahl der L\u00f6ffel pro Person (1)\n</code></pre>"},{"location":"loesungen/#12-funoten-und-verweise","title":"12. Fu\u00dfnoten und Verweise","text":"<p>Der Code f\u00fcr die Fu\u00dfnoten und Verweise ist: <pre><code>Der Kunde w\u00fcnscht ein traditionelles englisches Fr\u00fchst\u00fcck[^1].\n\n[^1]: Ein klassisches englisches Fr\u00fchst\u00fcck besteht typischerweise aus Baked Beans, Sausages, Bacon und Toast.\n\nMehr Informationen zu [English Breakfast](https://de.wikipedia.org/wiki/English_Breakfast).\n</code></pre></p>"},{"location":"loesungen/#13-das-farblayout-der-seite-andern","title":"13. das Farblayout der Seite \u00e4ndern","text":"<p>Das Farblayout kann wir folgt ge\u00e4ndert werden:  <pre><code>theme:\n  name: 'material'\n  palette:\n    primary: 'deep orange'\n    accent: 'blue'\n</code></pre></p>"},{"location":"loesungen/#14-das-logo-der-seite-andern","title":"14. das Logo der Seite \u00e4ndern","text":"<p>Das Logo kann in der Yaml Datei ver\u00e4ndert werden: <pre><code>theme:\nlogo: 'images/logo.png'\n</code></pre></p>"},{"location":"loesungen/#15-automatisch-nummerierte-abbildungsnummern-in-mkdocs-dokumentation-erzeugen","title":"15. automatisch nummerierte Abbildungsnummern in Mkdocs-Dokumentation erzeugen","text":"<pre><code>![English Breakfast](./images/english_breakfast.jpg){#fig:1}\n\nAbbildung 1 zeigt ein klassisches English Breakfast.\n\n#zweiter Teil\nWie in [Abbildung 1](#fig:1) gezeigt,... \n</code></pre>"},{"location":"ymldatei/","title":"YAML","text":""},{"location":"ymldatei/#yaml-datei-beschreibung","title":"YAML-Datei Beschreibung","text":"<p>YAML (YAML Ain't Markup Language) wird h\u00e4ufig in der Softwareentwicklung f\u00fcr Konfigurationsdateien verwendet. Hier sind einige wichtige Punkte:</p> <ul> <li>Sie werden oft f\u00fcr Konfigurationsdateien genutzt.</li> <li>Die Dateiendung ist \u00fcblicherweise \".yml\" oder \".yaml\".</li> <li>YAML ist ein Superset von JSON, d.h. jede g\u00fcltige JSON-Datei ist auch eine g\u00fcltige YAML-Datei.</li> <li>YAML steuert das Verhalten von MkDocs.</li> <li>Es definiert die Projektstruktur, das Theme und die Plugins.</li> </ul>"},{"location":"ymldatei/#beispiel-einer-yaml-datei","title":"Beispiel einer YAML-Datei","text":"<p>Hier ist ein einfaches Beispiel f\u00fcr eine YAML-Datei, die die Konfiguration eines MkDocs-Projekts beschreibt:</p> <p></p>"}]}